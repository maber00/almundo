---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/layout/Header.astro';
import Footer from '../../../components/layout/Footer.astro';
import { getDestinationById } from '../../../utils/content.js';

export async function getStaticPaths() {
  // Importar getCollection directamente aquí para evitar problemas
  const { getCollection } = await import('astro:content');
  const destinations = await getCollection('destinations');
  
  // Filtrar solo destinos nacionales
  const nationalDestinations = destinations.filter(entry => entry.data.type === 'nacional');
  
  return nationalDestinations.map(destination => ({
    params: { slug: destination.data.id || destination.slug },
    props: { destination: destination.data }
  }));
}

// Obtener los parámetros de la ruta
const { slug } = Astro.params;
// Obtener los datos del destino pasados como props o buscarlos por ID
const destinationFromProps = Astro.props.destination;
const destinationFromId = await getDestinationById(slug);

// Usar los datos de props o de la búsqueda por ID
const destination = destinationFromProps || destinationFromId;

// Si no se encuentra el destino, redirigir a la página de destinos
if (!destination) {
  return Astro.redirect('/destinos');
}

// Resto de tu código para procesar los datos del destino
const isOffer = destination.originalPrice !== null && destination.originalPrice > destination.price;
---

<!-- Tu HTML/Astro para mostrar los detalles del destino -->
<Layout title={`${destination.name} | AL mundo Tour`}>
  <Header />
  
  <main class="pt-20">
    <div class="container mx-auto px-4 py-12">
      <h1 class="text-3xl font-bold mb-4">{destination.name}</h1>
      <p class="text-xl text-gray-700 mb-6">{destination.description}</p>
      
      <!-- Mostrar el resto de la información -->
      <div class="bg-white rounded-lg shadow-lg p-8">
        <p class="text-2xl font-bold text-blue-600">
          Precio: ${destination.price.toLocaleString('es-CO')} COP
        </p>
        <p class="mb-4">Duración: {destination.durationText}</p>
        
        <h2 class="text-xl font-bold mt-6 mb-3">Incluye:</h2>
        <ul class="list-disc pl-5 mb-6">
          {destination.includes?.map(item => <li>{item}</li>)}
        </ul>
        
        <h2 class="text-xl font-bold mb-3">No incluye:</h2>
        <ul class="list-disc pl-5">
          {destination.notIncludes?.map(item => <li>{item}</li>)}
        </ul>
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>