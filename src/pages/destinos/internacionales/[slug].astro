---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/layout/Header.astro';
import Footer from '../../../components/layout/Footer.astro';
import { Icon } from 'astro-icon/components';
import { getDestinationById, getAllDestinations } from '../../../utils/content.js';

export async function getStaticPaths() {
  // Importar getCollection directamente aquí para evitar problemas
  const { getCollection } = await import('astro:content');
  const destinations = await getCollection('destinations');
  
  // Filtrar solo destinos internacionales
  const internationalDestinations = destinations.filter(entry => entry.data.type === 'internacional');
  
  return internationalDestinations.map(destination => ({
    params: { slug: destination.data.id || destination.slug },
    props: { destination: destination.data }
  }));
}

// Obtener los parámetros de la ruta
const { slug } = Astro.params;

// Obtener los datos del destino pasados como props o buscarlos por ID
const destinationFromProps = Astro.props.destination;
const destinationFromId = await getDestinationById(slug);

// Usar los datos de props o de la búsqueda por ID
const destination = destinationFromProps || destinationFromId;

// Si no se encuentra el destino, redirigir a la página de destinos
if (!destination) {
  return Astro.redirect('/destinos');
}

// Procesamiento seguro del precio original (igual que en destinos nacionales)
const originalPrice = destination.originalPrice != null
  ? (typeof destination.originalPrice === 'string'
      ? Number(String(destination.originalPrice).replace(/\./g, '')) || 0
      : destination.originalPrice)
  : 0;


// Verificar si es una oferta (tiene precio original mayor a 0 y menor que el precio actual)
const isOffer = originalPrice > 0 && originalPrice < destination.price;

// Función para formatear precios (mismo estilo que en destinos nacionales)
const formatPrice = (price: number | string | null | undefined): string => {
  if (price === null || price === undefined) return '';
  const numericPrice = typeof price === 'string' ? Number(price) || 0 : price;
  return destination.priceInUsd 
    ? `USD $${numericPrice.toLocaleString('en-US')}` 
    : `$${numericPrice.toLocaleString('es-CO')} COP`;
};

// Obtener destinos relacionados (misma región o tipo)
const allDestinations = await getAllDestinations();
const relatedDestinations = allDestinations
  .filter(d => d.id !== destination.id && (d.region === destination.region || d.type === destination.type))
  .slice(0, 3);

// Galería de imágenes (usar la principal si no hay galería)
const galleryImages = destination.gallery && destination.gallery.length > 0 
  ? destination.gallery 
  : [destination.image];
---

<Layout title={`${destination.name} | AL mundo Tour`} description={destination.description}>
  <Header />
  
  <main>
    <!-- Hero section del destino con imagen principal -->
    <section class="relative pt-20">
      <div class="h-[60vh] w-full relative overflow-hidden">
        <!-- Capa de oscurecimiento igual que en destinos nacionales -->
        <div class="absolute inset-0 bg-gradient-to-b from-black/50 via-black/30 to-black/70 z-10"></div>
        
        <img 
          src={destination.image} 
          alt={destination.name} 
          class="w-full h-full object-cover scale-105 transition-transform duration-10000 hover:scale-100"
        />
        
        <div class="absolute inset-0 flex items-center justify-center z-20">
          <div class="text-center px-4">
            <div class="p-4 rounded-lg inline-block">
              <span class={`inline-block font-bold px-3 py-1 rounded-full mb-4 ${
                isOffer ? 'bg-red-500 text-white' : 
                destination.tag === 'Aventura' ? 'bg-green-500 text-white' : 
                destination.tag === 'Playa' ? 'bg-cyan-500 text-white' :
                destination.tag === 'Cultural' ? 'bg-purple-500 text-white' :
                destination.tag === 'Romántico' ? 'bg-pink-500 text-white' :
                destination.tag === 'Todo incluido' ? 'bg-yellow-500 text-white' :
                'bg-blue-500 text-white'
              }`}>
                {isOffer ? 'Oferta' : destination.tag}
              </span>
              <h1 class="text-3xl md:text-4xl lg:text-6xl font-bold text-white mb-2 md:mb-4 drop-shadow-lg">
                {destination.name}
              </h1>
              <p class="text-lg md:text-2xl text-white max-w-3xl mx-auto drop-shadow-lg line-clamp-2 md:line-clamp-none">
                {destination.description.split('.')[0]}.
              </p>
            </div>
          </div>
        </div>
        
        <!-- Información en la parte inferior -->
        <div class="absolute bottom-0 left-0 w-full pt-6 md:pt-6 z-20">
          <div class="container mx-auto">
            <div class="bg-black/20 rounded-lg backdrop-blur-sm p-3">
              <div class="flex flex-col md:flex-row md:justify-between md:items-end flex-wrap gap-2 md:gap-4">
                <!-- Detalles del destino -->
                <div class="flex flex-wrap items-center gap-3 md:gap-6 text-white text-sm md:text-base">
                  <div class="flex items-center">
                    <Icon name="tabler:map-pin" class="w-4 h-4 md:w-5 md:h-5 mr-1 md:mr-2" />
                    <span>{destination.region}</span>
                  </div>
                  <div class="flex items-center">
                    <Icon name="tabler:clock" class="w-4 h-4 md:w-5 md:h-5 mr-1 md:mr-2" />
                    <span>{destination.durationText}</span>
                  </div>
                  
                </div>
                
                <!-- Bloque de Precio con fondo contrastante -->
                <div class="bg-white p-3 md:p-4 rounded-lg backdrop-blur-sm relative">
                  {isOffer && (
                    <div class="absolute -top-3 -right-3 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full shadow-md">
                      ¡OFERTA!
                    </div>
                  )}
                  <p class="text-xs md:text-sm text-gray-500">Precio por persona</p>
                  {isOffer ? (
                    <div>
                      <p class="line-through text-gray-500 text-sm md:text-base font-medium">
                        Antes: {formatPrice(destination.price)}
                      </p>
                      <p class="text-xl md:text-3xl font-bold text-red-600">
                        Ahora: {formatPrice(originalPrice)}
                      </p>
                      <p class="text-xs text-green-600 font-medium">
                        {Math.round(((destination.price - originalPrice) / destination.price) * 100)}% de descuento
                      </p>
                    </div>
                  ) : (
                    <p class="text-xl md:text-3xl font-bold text-[#0C005F]">
                      {formatPrice(destination.price)}
                    </p>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Breadcrumbs -->
    <section class="bg-gray-50 py-4 border-b border-gray-200">
      <div class="container mx-auto px-4">
        <div class="flex items-center text-sm text-gray-500">
          <a href="/" class="hover:text-[#0C005F]">Inicio</a>
          <span class="mx-2">➡️</span>
          <a href="/destinos" class="hover:text-[#0C005F]">Destinos</a>
          <span class="mx-2">➡️</span>
          <a href={`/destinos/${destination.type === 'nacional' ? 'nacionales' : 'internacionales'}`} class="hover:text-[#0C005F]">
            {destination.type === 'nacional' ? 'Nacionales' : 'Internacionales'}
          </a>
          <span class="mx-2">➡️</span>
          <span class="text-gray-700">{destination.name}</span>
        </div>
      </div>
    </section>
    
    <!-- Contenido principal -->
    <section class="py-8 md:py-12">
      <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 md:gap-8">
          <!-- Columna de información principal -->
          <div class="lg:col-span-2">
            <!-- Galería de imágenes con slider -->
            <div class="bg-white rounded-lg shadow-md overflow-hidden mb-6 md:mb-8">
              <div class="relative aspect-video">
                <div id="gallery-container" class="w-full h-full">
                  {galleryImages.map((image: string, index: number) => (
                    <img 
                      src={image} 
                      alt={`${destination.name} - Imagen ${index + 1}`} 
                      class={`absolute inset-0 w-full h-full object-cover transition-opacity duration-500 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
                      data-gallery-index={index}
                    />
                  ))}
                </div>
                
                {galleryImages.length > 1 && (
                  <div class="absolute inset-0 flex items-center justify-between px-4 z-10">
                    <button id="prev-image" class="w-10 h-10 bg-black/50 text-white rounded-full flex items-center justify-center hover:bg-black/70">
                      <Icon name="tabler:chevron-left" class="w-6 h-6" />
                    </button>
                    <button id="next-image" class="w-10 h-10 bg-black/50 text-white rounded-full flex items-center justify-center hover:bg-black/70">
                      <Icon name="tabler:chevron-right" class="w-6 h-6" />
                    </button>
                  </div>
                )}
                
                {galleryImages.length > 1 && (
                  <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-10">
                    {galleryImages.map((_, index) => (
                      <button 
                        class={`w-3 h-3 rounded-full ${index === 0 ? 'bg-white' : 'bg-white/50'}`}
                        data-dot-index={index}
                      ></button>
                    ))}
                  </div>
                )}
              </div>
            </div>
            
            <!-- Descripción del destino -->
            <div class="bg-white rounded-lg shadow-md p-8 mb-8">
              <h2 class="text-2xl font-bold text-gray-900 mb-4">Acerca de {destination.name}</h2>
              <p class="text-gray-700 leading-relaxed mb-6">
                {destination.description}
              </p>
            </div>
            
            <!-- Qué incluye y qué no incluye -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 mb-6 md:mb-8">
              <div class="bg-white rounded-lg shadow-md p-5 md:p-8">
                <h2 class="text-xl md:text-2xl font-bold text-gray-900 mb-3 md:mb-4 flex items-center">
                  <Icon name="tabler:check" class="w-5 h-5 md:w-6 md:h-6 text-green-500 mr-2" />
                  ¿Qué incluye?
                </h2>
                <ul class="space-y-2 md:space-y-3">
                  {destination.includes && destination.includes.map((item) => (
                    <li class="flex items-start">
                      <div class="bg-green-100 p-1 rounded-full mt-1 mr-2 md:mr-3 flex-shrink-0">
                        <Icon name="tabler:check" class="w-3 h-3 md:w-4 md:h-4 text-green-600" />
                      </div>
                      <span class="text-gray-700 text-sm md:text-base">{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              <div class="bg-white rounded-lg shadow-md p-5 md:p-8">
                <h2 class="text-xl md:text-2xl font-bold text-gray-900 mb-3 md:mb-4 flex items-center">
                  <Icon name="tabler:x" class="w-5 h-5 md:w-6 md:h-6 text-red-500 mr-2" />
                  ¿Qué no incluye?
                </h2>
                <ul class="space-y-2 md:space-y-3">
                  {destination.notIncludes && destination.notIncludes.map((item) => (
                    <li class="flex items-start">
                      <div class="bg-red-100 p-1 rounded-full mt-1 mr-2 md:mr-3 flex-shrink-0">
                        <Icon name="tabler:x" class="w-3 h-3 md:w-4 md:h-4 text-red-600" />
                      </div>
                      <span class="text-gray-700 text-sm md:text-base">{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            
            <!-- Notas importantes -->
            {destination.notes && (
              <div class="bg-white rounded-lg shadow-md p-8 mb-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-4 flex items-center">
                  <Icon name="tabler:info-circle" class="w-6 h-6 text-blue-500 mr-2" />
                  Información importante
                </h2>
                <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded">
                  <p class="text-gray-700">{destination.notes}</p>
                </div>
              </div>
            )}

            <!-- Requisitos de viaje para destinos internacionales (si existen) -->
            {destination.requirements && (
              <div class="bg-white rounded-lg shadow-md p-8 mb-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-4 flex items-center">
                  <Icon name="tabler:file-certificate" class="w-6 h-6 text-amber-500 mr-2" />
                  Requisitos de viaje
                </h2>
                <ul class="space-y-3">
                  {destination.requirements.map((req) => (
                    <li class="flex items-start">
                      <div class="bg-amber-100 p-1 rounded-full mt-1 mr-3">
                        <Icon name="tabler:alert-triangle" class="w-4 h-4 text-amber-600" />
                      </div>
                      <span class="text-gray-700">{req}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
          
         <!-- Formulario de consulta rápida, contacto directo y detalles del viaje -->
         <div class="space-y-8 sticky">

          <!-- 1) Formulario de consulta rápida -->
          <div class="bg-white rounded-lg shadow-lg p-6  top-24">
            <h3 class="text-xl font-bold text-gray-900 mb-4">¿Te interesa este destino?</h3>
            <p class="text-gray-600 mb-4">Completa el formulario y te contactaremos a la brevedad.</p>
            
            <form 
              id="lead-capture-form"
              name="cotizacion"
              method="POST"
              data-netlify="true"
              netlify-honeypot="bot-field"
              class="space-y-4"
            >
              <input type="hidden" name="form-name" value="cotizacion" />
              <p class="hidden">
                <label>No llenes esto si eres humano: <input name="bot-field" /></label>
              </p>
              <input type="hidden" name="destination" value={destination.name} />
              
              <div>
                <label for="full_name" class="block text-sm font-medium text-gray-700 mb-1">Nombre completo</label>
                <input 
                  type="text" id="full_name" name="full_name" required 
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" 
                />
              </div>
              
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Correo electrónico</label>
                <input 
                  type="email" id="email" name="email" required 
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" 
                />
              </div>
              
              <div>
                <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Teléfono / WhatsApp</label>
                <input 
                  type="tel" id="phone" name="phone" required 
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" 
                />
              </div>
              
              <div>
                <label for="travel_date" class="block text-sm font-medium text-gray-700 mb-1">Fecha aproximada de viaje</label>
                <input 
                  type="date" id="travel_date" name="travel_date" 
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500" 
                />
              </div>
              
              <div>
                <label for="special_requirements" class="block text-sm font-medium text-gray-700 mb-1">Mensaje</label>
                <textarea 
                  id="special_requirements" name="special_requirements" rows="3"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
                ></textarea>
              </div>
              
              <button 
                type="submit" 
                class="w-full bg-[#0C005F] text-white px-4 py-3 rounded-md font-medium hover:bg-blue-700 transition-colors flex items-center justify-center"
              >
                <Icon name="tabler:send" class="w-5 h-5 mr-2" /> Solicitar información
              </button>
            </form>
            
            <div id="form-status" class="mt-6 text-center hidden">
              <div id="form-success" class="bg-green-50 text-green-700 p-4 rounded-lg hidden">
                <p>✅ ¡Gracias! Te contactaremos pronto.</p>
              </div>
              <div id="form-error" class="bg-red-50 text-red-700 p-4 rounded-lg hidden">
                <p>⚠️ Hubo un problema. Por favor inténtalo de nuevo.</p>
              </div>
            </div>
          </div>

          <!-- 2) Contacto directo WhatsApp / llamada -->
          <div class="bg-white rounded-lg shadow-lg p-6">
            <p class="text-center text-gray-500 text-sm mb-4">O si prefieres, contáctanos directamente:</p>
            <a
              href={`https://wa.me/573165276338?text=Hola, estoy interesado en el destino ${destination.name}`}
              target="_blank"
              class="flex items-center justify-center bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition-colors"
            >
              <Icon name="tabler:brand-whatsapp" class="w-5 h-5 mr-2" />
              Contactar por WhatsApp
            </a>
            <a
              href="tel:+573165276338"
              class="mt-3 flex items-center justify-center bg-[#0C005F] text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors"
            >
              <Icon name="tabler:phone" class="w-5 h-5 mr-2" />
              Llamar ahora
            </a>
          </div>

          <!-- 3) Detalles del viaje -->
          <div class="bg-gray-50 rounded-lg shadow-md p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4">Detalles del viaje</h3>
            <div class="space-y-4">
              <div class="flex items-start">
                <div class="bg-blue-100 p-2 rounded-full mr-3">
                  <Icon name="tabler:calendar" class="w-5 h-5 text-[#0C005F]" />
                </div>
                <div>
                  <p class="font-medium text-gray-900">Duración</p>
                  <p class="text-gray-600">{destination.durationText}</p>
                </div>
              </div>
              <div class="flex items-start">
                <div class="bg-blue-100 p-2 rounded-full mr-3">
                  <Icon name="tabler:map-pin" class="w-5 h-5 text-[#0C005F]" />
                </div>
                <div>
                  <p class="font-medium text-gray-900">Región</p>
                  <p class="text-gray-600">{destination.region}</p>
                </div>
              </div>
              <div class="flex items-start">
                <div class="bg-blue-100 p-2 rounded-full mr-3">
                  <Icon name="tabler:users" class="w-5 h-5 text-[#0C005F]" />
                </div>
                <div>
                  <p class="font-medium text-gray-900">Disponibilidad</p>
                  <p class="text-gray-600">Últimos {destination.availability} cupos</p>
                </div>
              </div>
              
            </div>
          </div>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Destinos relacionados -->
    {relatedDestinations.length > 0 && (
      <section class="py-12 bg-gray-50">
        <div class="container mx-auto px-4">
          <h2 class="text-3xl font-bold text-center text-gray-900 mb-8">Destinos que también te pueden interesar</h2>
          
          <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            {relatedDestinations.map((related) => (
              <div class="bg-white rounded-lg shadow-lg overflow-hidden transform transition duration-300 hover:shadow-xl hover:-translate-y-1">
                <div class="relative">
                  <img 
                    src={related.image} 
                    alt={related.name} 
                    class="w-full h-48 object-cover"
                  />
                  
                  <div class="absolute top-2 right-2">
                    <span class={`text-xs font-bold px-2 py-1 rounded-full ${
                      related.tag === 'Oferta' ? 'bg-red-500 text-white' : 
                      related.tag === 'Aventura' ? 'bg-green-500 text-white' : 
                      related.tag === 'Playa' ? 'bg-cyan-500 text-white' :
                      related.tag === 'Cultural' ? 'bg-purple-500 text-white' :
                      related.tag === 'Romántico' ? 'bg-pink-500 text-white' : 
                      related.tag === 'Todo incluido' ? 'bg-yellow-500 text-white' :
                      'bg-blue-500 text-white'
                    }`}>
                      {related.tag}
                    </span>
                  </div>
                  
                  <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4">
                    <h3 class="text-xl font-bold text-white">{related.name}</h3>
                  </div>
                </div>
                
                <div class="p-4">
                  <div class="flex justify-between items-center mb-2">
                    <p class="text-xl font-bold text-[#0C005F]">
                      {related.priceInUsd ? 'USD ' : ''}${related.price.toLocaleString('es-CO')}
                      <span class="text-sm font-normal">{related.priceInUsd ? '' : 'COP'}</span>
                    </p>
                    
                    <span class="text-sm text-gray-500">{related.durationText}</span>
                  </div>
                  
                  <a 
                    href={`/destinos/${related.type === 'nacional' ? 'nacionales' : 'internacionales'}/${related.id}`}
                    class="block w-full bg-[#0C005F] text-white text-center py-2 rounded-md font-medium hover:bg-blue-700 transition-colors mt-3"
                  >
                    text-[#0C005F]
                  </a>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}
    
    <!-- CTA final -->
    <section class="py-12 bg-[#0C005F] text-white">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl font-bold mb-4">¿Listo para vivir esta experiencia?</h2>
        <p class="text-xl text-blue-100 mb-8 max-w-3xl mx-auto">
          Contacta con nuestros asesores especializados y comienza a planificar tu viaje a {destination.name} hoy mismo.
        </p>
        
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href={`/contacto?destino=${destination.id}`}
            class="bg-white text-[#0C005F] py-3 px-8 rounded-md font-medium hover:bg-blue-50 transition-colors"
          >
            Solicitar cotización
          </a>
          
          <a 
            href={`https://wa.me/573165276338?text=Hola, estoy interesado en el destino ${destination.name}`}
            target="_blank" 
            class="bg-green-500 text-white py-3 px-8 rounded-md font-medium hover:bg-green-600 transition-colors"
          >
            Contactar por WhatsApp
          </a>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>

<script>
// @ts-nocheck
document.addEventListener('DOMContentLoaded', function() {
  //
  // 1) Galería de imágenes
  //
  const images = document.querySelectorAll('[data-gallery-index]');
  const dots   = document.querySelectorAll('[data-dot-index]');
  const prevBtn = document.getElementById('prev-image');
  const nextBtn = document.getElementById('next-image');
  let currentIndex = 0;

  function showImage(index) {
    if (images.length === 0) return;
    if (index < 0) index = images.length - 1;
    if (index >= images.length) index = 0;

    images.forEach(function(img, i) {
      img.classList.toggle('opacity-100', i === index);
      img.classList.toggle('opacity-0',    i !== index);
    });
    dots.forEach(function(dot, i) {
      dot.classList.toggle('bg-white',    i === index);
      dot.classList.toggle('bg-white/50', i !== index);
    });
    currentIndex = index;
  }

  if (prevBtn) {
    prevBtn.addEventListener('click', function() {
      showImage(currentIndex - 1);
    });
  }
  if (nextBtn) {
    nextBtn.addEventListener('click', function() {
      showImage(currentIndex + 1);
    });
  }
  dots.forEach(function(dot, i) {
    dot.addEventListener('click', function() {
      showImage(i);
    });
  });
  if (images.length > 1) {
    setInterval(function() {
      showImage(currentIndex + 1);
    }, 5000);
  }

  //
  // 2) Envío del formulario de cotización
  //
  var form = document.getElementById('lead-capture-form');
  var status   = document.getElementById('form-status');
  var success  = document.getElementById('form-success');
  var errorMsg = document.getElementById('form-error');

  if (!form) return;

  form.addEventListener('submit', function(e) {
    e.preventDefault();

    // 2.1) Convertir FormData a objeto
    var formData = new FormData(form);
    var data = Object.fromEntries(formData.entries());

    // 2.2) Backup en Netlify Forms
    fetch('/', {
      method: 'POST',
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: new URLSearchParams(formData).toString()
    }).catch(function(err) {
      console.warn('Netlify Forms backup failed', err);
    });

    // 2.3) Llamar a nuestra función submit-quote
    fetch('/.netlify/functions/submit-quote', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    })
    .then(function(res) {
      return res.json().then(function(json) {
        return { status: res.status, body: json };
      });
    })
    .then(function(result) {
      if (result.status >= 200 && result.status < 300 && result.body.success) {
        status && status.classList.remove('hidden');
        success && success.classList.remove('hidden');
        form.reset();
      } else {
        throw new Error(result.body.message || 'Error inesperado');
      }
    })
    .catch(function(err) {
      status && status.classList.remove('hidden');
      errorMsg && errorMsg.classList.remove('hidden');
      console.error('Error enviando cotización:', err);
    });
  });
});
</script>
